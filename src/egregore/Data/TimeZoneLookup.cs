//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: .NET Core 3.1.5
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// ReSharper disable StringLiteralTypo

using System;
using System.Globalization;
using System.Runtime.InteropServices;

namespace egregore.Data
{
    /// <summary>
    /// Source: https://github.com/unicode-cldr/cldr-core/blob/master/supplemental/windowsZones.json
    /// Unicode Version: 13.0.0
    /// CLDR Version: 37
    /// </summary>
    public static class TimeZoneLookup
    {
        /// <summary> Determines the wall time and time zone for the current server. </summary>
        public static IsoTimeZoneString Now
        {
            get
            {
                var now = DateTimeOffset.Now;

                // Non-Windows servers use IANA
                if(!RuntimeInformation.IsOSPlatform(OSPlatform.Windows))
                    return new IsoTimeZoneString(now, TimeZoneInfo.Local.StandardName);

                // Windows servers use CLDR
                var region = RegionInfo.CurrentRegion;
                var regionName = region.EnglishName.Replace(' ', '_');
                var localTimeZone = TimeZoneInfo.Local; 

                #region LUT

                switch(localTimeZone.StandardName)
                {
                    case "Afghanistan Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "AF":
                                    return new IsoTimeZoneString(now, "Asia/Kabul");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Kabul");
                        }
                    }
                    case "Alaskan Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "US":
                                switch($"America/{regionName}")
                                {
                                    case "America/Anchorage":
                                        return new IsoTimeZoneString(now, "America/Anchorage");
                                    case "America/Juneau":
                                        return new IsoTimeZoneString(now, "America/Juneau");
                                    case "America/Metlakatla":
                                        return new IsoTimeZoneString(now, "America/Metlakatla");
                                    case "America/Nome":
                                        return new IsoTimeZoneString(now, "America/Nome");
                                    case "America/Sitka":
                                        return new IsoTimeZoneString(now, "America/Sitka");
                                    case "America/Yakutat":
                                        return new IsoTimeZoneString(now, "America/Yakutat");
                                    default:
                                        return new IsoTimeZoneString(now, "America/Anchorage");
                                }
                            default:
                                    return new IsoTimeZoneString(now, "America/Anchorage");
                        }
                    }
                    case "Aleutian Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "US":
                                    return new IsoTimeZoneString(now, "America/Adak");
                            default:
                                    return new IsoTimeZoneString(now, "America/Adak");
                        }
                    }
                    case "Altai Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "RU":
                                    return new IsoTimeZoneString(now, "Asia/Barnaul");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Barnaul");
                        }
                    }
                    case "Arab Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "YE":
                                    return new IsoTimeZoneString(now, "Asia/Aden");
                            case "SA":
                                    return new IsoTimeZoneString(now, "Asia/Riyadh");
                            case "QA":
                                    return new IsoTimeZoneString(now, "Asia/Qatar");
                            case "KW":
                                    return new IsoTimeZoneString(now, "Asia/Kuwait");
                            case "BH":
                                    return new IsoTimeZoneString(now, "Asia/Bahrain");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Riyadh");
                        }
                    }
                    case "Arabian Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ZZ":
                                    return new IsoTimeZoneString(now, "Etc/GMT-4");
                            case "OM":
                                    return new IsoTimeZoneString(now, "Asia/Muscat");
                            case "AE":
                                    return new IsoTimeZoneString(now, "Asia/Dubai");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Dubai");
                        }
                    }
                    case "Arabic Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "IQ":
                                    return new IsoTimeZoneString(now, "Asia/Baghdad");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Baghdad");
                        }
                    }
                    case "Argentina Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "AR":
                                switch($"America/{regionName}")
                                {
                                    case "America/Buenos_Aires":
                                        return new IsoTimeZoneString(now, "America/Buenos_Aires");
                                    case "America/Argentina/La_Rioja":
                                        return new IsoTimeZoneString(now, "America/Argentina/La_Rioja");
                                    case "America/Argentina/Rio_Gallegos":
                                        return new IsoTimeZoneString(now, "America/Argentina/Rio_Gallegos");
                                    case "America/Argentina/Salta":
                                        return new IsoTimeZoneString(now, "America/Argentina/Salta");
                                    case "America/Argentina/San_Juan":
                                        return new IsoTimeZoneString(now, "America/Argentina/San_Juan");
                                    case "America/Argentina/San_Luis":
                                        return new IsoTimeZoneString(now, "America/Argentina/San_Luis");
                                    case "America/Argentina/Tucuman":
                                        return new IsoTimeZoneString(now, "America/Argentina/Tucuman");
                                    case "America/Argentina/Ushuaia":
                                        return new IsoTimeZoneString(now, "America/Argentina/Ushuaia");
                                    case "America/Catamarca":
                                        return new IsoTimeZoneString(now, "America/Catamarca");
                                    case "America/Cordoba":
                                        return new IsoTimeZoneString(now, "America/Cordoba");
                                    case "America/Jujuy":
                                        return new IsoTimeZoneString(now, "America/Jujuy");
                                    case "America/Mendoza":
                                        return new IsoTimeZoneString(now, "America/Mendoza");
                                    default:
                                        return new IsoTimeZoneString(now, "America/Buenos_Aires");
                                }
                            default:
                                    return new IsoTimeZoneString(now, "America/Buenos_Aires");
                        }
                    }
                    case "Astrakhan Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "RU":
                                switch($"Europe/{regionName}")
                                {
                                    case "Europe/Astrakhan":
                                        return new IsoTimeZoneString(now, "Europe/Astrakhan");
                                    case "Europe/Ulyanovsk":
                                        return new IsoTimeZoneString(now, "Europe/Ulyanovsk");
                                    default:
                                        return new IsoTimeZoneString(now, "Europe/Astrakhan");
                                }
                            default:
                                    return new IsoTimeZoneString(now, "Europe/Astrakhan");
                        }
                    }
                    case "Atlantic Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "GL":
                                    return new IsoTimeZoneString(now, "America/Thule");
                            case "CA":
                                switch($"America/{regionName}")
                                {
                                    case "America/Halifax":
                                        return new IsoTimeZoneString(now, "America/Halifax");
                                    case "America/Glace_Bay":
                                        return new IsoTimeZoneString(now, "America/Glace_Bay");
                                    case "America/Goose_Bay":
                                        return new IsoTimeZoneString(now, "America/Goose_Bay");
                                    case "America/Moncton":
                                        return new IsoTimeZoneString(now, "America/Moncton");
                                    default:
                                        return new IsoTimeZoneString(now, "America/Halifax");
                                }
                            case "BM":
                                    return new IsoTimeZoneString(now, "Atlantic/Bermuda");
                            default:
                                    return new IsoTimeZoneString(now, "America/Halifax");
                        }
                    }
                    case "AUS Central Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "AU":
                                    return new IsoTimeZoneString(now, "Australia/Darwin");
                            default:
                                    return new IsoTimeZoneString(now, "Australia/Darwin");
                        }
                    }
                    case "Aus Central W. Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "AU":
                                    return new IsoTimeZoneString(now, "Australia/Eucla");
                            default:
                                    return new IsoTimeZoneString(now, "Australia/Eucla");
                        }
                    }
                    case "AUS Eastern Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "AU":
                                switch($"Australia/{regionName}")
                                {
                                    case "Australia/Sydney":
                                        return new IsoTimeZoneString(now, "Australia/Sydney");
                                    case "Australia/Melbourne":
                                        return new IsoTimeZoneString(now, "Australia/Melbourne");
                                    default:
                                        return new IsoTimeZoneString(now, "Australia/Sydney");
                                }
                            default:
                                    return new IsoTimeZoneString(now, "Australia/Sydney");
                        }
                    }
                    case "Azerbaijan Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "AZ":
                                    return new IsoTimeZoneString(now, "Asia/Baku");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Baku");
                        }
                    }
                    case "Azores Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "PT":
                                    return new IsoTimeZoneString(now, "Atlantic/Azores");
                            case "GL":
                                    return new IsoTimeZoneString(now, "America/Scoresbysund");
                            default:
                                    return new IsoTimeZoneString(now, "Atlantic/Azores");
                        }
                    }
                    case "Bahia Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "BR":
                                    return new IsoTimeZoneString(now, "America/Bahia");
                            default:
                                    return new IsoTimeZoneString(now, "America/Bahia");
                        }
                    }
                    case "Bangladesh Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "BT":
                                    return new IsoTimeZoneString(now, "Asia/Thimphu");
                            case "BD":
                                    return new IsoTimeZoneString(now, "Asia/Dhaka");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Dhaka");
                        }
                    }
                    case "Belarus Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "BY":
                                    return new IsoTimeZoneString(now, "Europe/Minsk");
                            default:
                                    return new IsoTimeZoneString(now, "Europe/Minsk");
                        }
                    }
                    case "Bougainville Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "PG":
                                    return new IsoTimeZoneString(now, "Pacific/Bougainville");
                            default:
                                    return new IsoTimeZoneString(now, "Pacific/Bougainville");
                        }
                    }
                    case "Canada Central Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "CA":
                                switch($"America/{regionName}")
                                {
                                    case "America/Regina":
                                        return new IsoTimeZoneString(now, "America/Regina");
                                    case "America/Swift_Current":
                                        return new IsoTimeZoneString(now, "America/Swift_Current");
                                    default:
                                        return new IsoTimeZoneString(now, "America/Regina");
                                }
                            default:
                                    return new IsoTimeZoneString(now, "America/Regina");
                        }
                    }
                    case "Cape Verde Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ZZ":
                                    return new IsoTimeZoneString(now, "Etc/GMT+1");
                            case "CV":
                                    return new IsoTimeZoneString(now, "Atlantic/Cape_Verde");
                            default:
                                    return new IsoTimeZoneString(now, "Atlantic/Cape_Verde");
                        }
                    }
                    case "Caucasus Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "AM":
                                    return new IsoTimeZoneString(now, "Asia/Yerevan");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Yerevan");
                        }
                    }
                    case "Cen. Australia Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "AU":
                                switch($"Australia/{regionName}")
                                {
                                    case "Australia/Adelaide":
                                        return new IsoTimeZoneString(now, "Australia/Adelaide");
                                    case "Australia/Broken_Hill":
                                        return new IsoTimeZoneString(now, "Australia/Broken_Hill");
                                    default:
                                        return new IsoTimeZoneString(now, "Australia/Adelaide");
                                }
                            default:
                                    return new IsoTimeZoneString(now, "Australia/Adelaide");
                        }
                    }
                    case "Central America Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ZZ":
                                    return new IsoTimeZoneString(now, "Etc/GMT+6");
                            case "SV":
                                    return new IsoTimeZoneString(now, "America/El_Salvador");
                            case "NI":
                                    return new IsoTimeZoneString(now, "America/Managua");
                            case "HN":
                                    return new IsoTimeZoneString(now, "America/Tegucigalpa");
                            case "GT":
                                    return new IsoTimeZoneString(now, "America/Guatemala");
                            case "EC":
                                    return new IsoTimeZoneString(now, "Pacific/Galapagos");
                            case "CR":
                                    return new IsoTimeZoneString(now, "America/Costa_Rica");
                            case "BZ":
                                    return new IsoTimeZoneString(now, "America/Belize");
                            default:
                                    return new IsoTimeZoneString(now, "America/Guatemala");
                        }
                    }
                    case "Central Asia Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ZZ":
                                    return new IsoTimeZoneString(now, "Etc/GMT-6");
                            case "KZ":
                                switch($"Asia/{regionName}")
                                {
                                    case "Asia/Almaty":
                                        return new IsoTimeZoneString(now, "Asia/Almaty");
                                    case "Asia/Qostanay":
                                        return new IsoTimeZoneString(now, "Asia/Qostanay");
                                    default:
                                        return new IsoTimeZoneString(now, "Asia/Almaty");
                                }
                            case "KG":
                                    return new IsoTimeZoneString(now, "Asia/Bishkek");
                            case "IO":
                                    return new IsoTimeZoneString(now, "Indian/Chagos");
                            case "CN":
                                    return new IsoTimeZoneString(now, "Asia/Urumqi");
                            case "AQ":
                                    return new IsoTimeZoneString(now, "Antarctica/Vostok");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Almaty");
                        }
                    }
                    case "Central Brazilian Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "BR":
                                switch($"America/{regionName}")
                                {
                                    case "America/Cuiaba":
                                        return new IsoTimeZoneString(now, "America/Cuiaba");
                                    case "America/Campo_Grande":
                                        return new IsoTimeZoneString(now, "America/Campo_Grande");
                                    default:
                                        return new IsoTimeZoneString(now, "America/Cuiaba");
                                }
                            default:
                                    return new IsoTimeZoneString(now, "America/Cuiaba");
                        }
                    }
                    case "Central Europe Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "SK":
                                    return new IsoTimeZoneString(now, "Europe/Bratislava");
                            case "SI":
                                    return new IsoTimeZoneString(now, "Europe/Ljubljana");
                            case "RS":
                                    return new IsoTimeZoneString(now, "Europe/Belgrade");
                            case "ME":
                                    return new IsoTimeZoneString(now, "Europe/Podgorica");
                            case "HU":
                                    return new IsoTimeZoneString(now, "Europe/Budapest");
                            case "CZ":
                                    return new IsoTimeZoneString(now, "Europe/Prague");
                            case "AL":
                                    return new IsoTimeZoneString(now, "Europe/Tirane");
                            default:
                                    return new IsoTimeZoneString(now, "Europe/Budapest");
                        }
                    }
                    case "Central European Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "PL":
                                    return new IsoTimeZoneString(now, "Europe/Warsaw");
                            case "MK":
                                    return new IsoTimeZoneString(now, "Europe/Skopje");
                            case "HR":
                                    return new IsoTimeZoneString(now, "Europe/Zagreb");
                            case "BA":
                                    return new IsoTimeZoneString(now, "Europe/Sarajevo");
                            default:
                                    return new IsoTimeZoneString(now, "Europe/Warsaw");
                        }
                    }
                    case "Central Pacific Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ZZ":
                                    return new IsoTimeZoneString(now, "Etc/GMT-11");
                            case "VU":
                                    return new IsoTimeZoneString(now, "Pacific/Efate");
                            case "SB":
                                    return new IsoTimeZoneString(now, "Pacific/Guadalcanal");
                            case "NC":
                                    return new IsoTimeZoneString(now, "Pacific/Noumea");
                            case "FM":
                                switch($"Pacific/{regionName}")
                                {
                                    case "Pacific/Ponape":
                                        return new IsoTimeZoneString(now, "Pacific/Ponape");
                                    case "Pacific/Kosrae":
                                        return new IsoTimeZoneString(now, "Pacific/Kosrae");
                                    default:
                                        return new IsoTimeZoneString(now, "Pacific/Ponape");
                                }
                            case "AU":
                                    return new IsoTimeZoneString(now, "Antarctica/Macquarie");
                            default:
                                    return new IsoTimeZoneString(now, "Pacific/Guadalcanal");
                        }
                    }
                    case "Central Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ZZ":
                                    return new IsoTimeZoneString(now, "CST6CDT");
                            case "US":
                                switch($"America/{regionName}")
                                {
                                    case "America/Chicago":
                                        return new IsoTimeZoneString(now, "America/Chicago");
                                    case "America/Indiana/Knox":
                                        return new IsoTimeZoneString(now, "America/Indiana/Knox");
                                    case "America/Indiana/Tell_City":
                                        return new IsoTimeZoneString(now, "America/Indiana/Tell_City");
                                    case "America/Menominee":
                                        return new IsoTimeZoneString(now, "America/Menominee");
                                    case "America/North_Dakota/Beulah":
                                        return new IsoTimeZoneString(now, "America/North_Dakota/Beulah");
                                    case "America/North_Dakota/Center":
                                        return new IsoTimeZoneString(now, "America/North_Dakota/Center");
                                    case "America/North_Dakota/New_Salem":
                                        return new IsoTimeZoneString(now, "America/North_Dakota/New_Salem");
                                    default:
                                        return new IsoTimeZoneString(now, "America/Chicago");
                                }
                            case "MX":
                                    return new IsoTimeZoneString(now, "America/Matamoros");
                            case "CA":
                                switch($"America/{regionName}")
                                {
                                    case "America/Winnipeg":
                                        return new IsoTimeZoneString(now, "America/Winnipeg");
                                    case "America/Rainy_River":
                                        return new IsoTimeZoneString(now, "America/Rainy_River");
                                    case "America/Rankin_Inlet":
                                        return new IsoTimeZoneString(now, "America/Rankin_Inlet");
                                    case "America/Resolute":
                                        return new IsoTimeZoneString(now, "America/Resolute");
                                    default:
                                        return new IsoTimeZoneString(now, "America/Winnipeg");
                                }
                            default:
                                    return new IsoTimeZoneString(now, "America/Chicago");
                        }
                    }
                    case "Central Standard Time (Mexico)":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "MX":
                                switch($"America/{regionName}")
                                {
                                    case "America/Mexico_City":
                                        return new IsoTimeZoneString(now, "America/Mexico_City");
                                    case "America/Bahia_Banderas":
                                        return new IsoTimeZoneString(now, "America/Bahia_Banderas");
                                    case "America/Merida":
                                        return new IsoTimeZoneString(now, "America/Merida");
                                    case "America/Monterrey":
                                        return new IsoTimeZoneString(now, "America/Monterrey");
                                    default:
                                        return new IsoTimeZoneString(now, "America/Mexico_City");
                                }
                            default:
                                    return new IsoTimeZoneString(now, "America/Mexico_City");
                        }
                    }
                    case "Chatham Islands Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "NZ":
                                    return new IsoTimeZoneString(now, "Pacific/Chatham");
                            default:
                                    return new IsoTimeZoneString(now, "Pacific/Chatham");
                        }
                    }
                    case "China Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "MO":
                                    return new IsoTimeZoneString(now, "Asia/Macau");
                            case "HK":
                                    return new IsoTimeZoneString(now, "Asia/Hong_Kong");
                            case "CN":
                                    return new IsoTimeZoneString(now, "Asia/Shanghai");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Shanghai");
                        }
                    }
                    case "Cuba Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "CU":
                                    return new IsoTimeZoneString(now, "America/Havana");
                            default:
                                    return new IsoTimeZoneString(now, "America/Havana");
                        }
                    }
                    case "Dateline Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ZZ":
                                    return new IsoTimeZoneString(now, "Etc/GMT+12");
                            default:
                                    return new IsoTimeZoneString(now, "Etc/GMT+12");
                        }
                    }
                    case "E. Africa Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ZZ":
                                    return new IsoTimeZoneString(now, "Etc/GMT-3");
                            case "YT":
                                    return new IsoTimeZoneString(now, "Indian/Mayotte");
                            case "UG":
                                    return new IsoTimeZoneString(now, "Africa/Kampala");
                            case "TZ":
                                    return new IsoTimeZoneString(now, "Africa/Dar_es_Salaam");
                            case "SS":
                                    return new IsoTimeZoneString(now, "Africa/Juba");
                            case "SO":
                                    return new IsoTimeZoneString(now, "Africa/Mogadishu");
                            case "MG":
                                    return new IsoTimeZoneString(now, "Indian/Antananarivo");
                            case "KM":
                                    return new IsoTimeZoneString(now, "Indian/Comoro");
                            case "KE":
                                    return new IsoTimeZoneString(now, "Africa/Nairobi");
                            case "ET":
                                    return new IsoTimeZoneString(now, "Africa/Addis_Ababa");
                            case "ER":
                                    return new IsoTimeZoneString(now, "Africa/Asmera");
                            case "DJ":
                                    return new IsoTimeZoneString(now, "Africa/Djibouti");
                            case "AQ":
                                    return new IsoTimeZoneString(now, "Antarctica/Syowa");
                            default:
                                    return new IsoTimeZoneString(now, "Africa/Nairobi");
                        }
                    }
                    case "E. Australia Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "AU":
                                switch($"Australia/{regionName}")
                                {
                                    case "Australia/Brisbane":
                                        return new IsoTimeZoneString(now, "Australia/Brisbane");
                                    case "Australia/Lindeman":
                                        return new IsoTimeZoneString(now, "Australia/Lindeman");
                                    default:
                                        return new IsoTimeZoneString(now, "Australia/Brisbane");
                                }
                            default:
                                    return new IsoTimeZoneString(now, "Australia/Brisbane");
                        }
                    }
                    case "E. Europe Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "MD":
                                    return new IsoTimeZoneString(now, "Europe/Chisinau");
                            default:
                                    return new IsoTimeZoneString(now, "Europe/Chisinau");
                        }
                    }
                    case "E. South America Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "BR":
                                    return new IsoTimeZoneString(now, "America/Sao_Paulo");
                            default:
                                    return new IsoTimeZoneString(now, "America/Sao_Paulo");
                        }
                    }
                    case "Easter Island Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "CL":
                                    return new IsoTimeZoneString(now, "Pacific/Easter");
                            default:
                                    return new IsoTimeZoneString(now, "Pacific/Easter");
                        }
                    }
                    case "Eastern Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ZZ":
                                    return new IsoTimeZoneString(now, "EST5EDT");
                            case "US":
                                switch($"America/{regionName}")
                                {
                                    case "America/New_York":
                                        return new IsoTimeZoneString(now, "America/New_York");
                                    case "America/Detroit":
                                        return new IsoTimeZoneString(now, "America/Detroit");
                                    case "America/Indiana/Petersburg":
                                        return new IsoTimeZoneString(now, "America/Indiana/Petersburg");
                                    case "America/Indiana/Vincennes":
                                        return new IsoTimeZoneString(now, "America/Indiana/Vincennes");
                                    case "America/Indiana/Winamac":
                                        return new IsoTimeZoneString(now, "America/Indiana/Winamac");
                                    case "America/Kentucky/Monticello":
                                        return new IsoTimeZoneString(now, "America/Kentucky/Monticello");
                                    case "America/Louisville":
                                        return new IsoTimeZoneString(now, "America/Louisville");
                                    default:
                                        return new IsoTimeZoneString(now, "America/New_York");
                                }
                            case "CA":
                                switch($"America/{regionName}")
                                {
                                    case "America/Toronto":
                                        return new IsoTimeZoneString(now, "America/Toronto");
                                    case "America/Iqaluit":
                                        return new IsoTimeZoneString(now, "America/Iqaluit");
                                    case "America/Montreal":
                                        return new IsoTimeZoneString(now, "America/Montreal");
                                    case "America/Nipigon":
                                        return new IsoTimeZoneString(now, "America/Nipigon");
                                    case "America/Pangnirtung":
                                        return new IsoTimeZoneString(now, "America/Pangnirtung");
                                    case "America/Thunder_Bay":
                                        return new IsoTimeZoneString(now, "America/Thunder_Bay");
                                    default:
                                        return new IsoTimeZoneString(now, "America/Toronto");
                                }
                            case "BS":
                                    return new IsoTimeZoneString(now, "America/Nassau");
                            default:
                                    return new IsoTimeZoneString(now, "America/New_York");
                        }
                    }
                    case "Eastern Standard Time (Mexico)":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "MX":
                                    return new IsoTimeZoneString(now, "America/Cancun");
                            default:
                                    return new IsoTimeZoneString(now, "America/Cancun");
                        }
                    }
                    case "Egypt Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "EG":
                                    return new IsoTimeZoneString(now, "Africa/Cairo");
                            default:
                                    return new IsoTimeZoneString(now, "Africa/Cairo");
                        }
                    }
                    case "Ekaterinburg Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "RU":
                                    return new IsoTimeZoneString(now, "Asia/Yekaterinburg");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Yekaterinburg");
                        }
                    }
                    case "Fiji Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "FJ":
                                    return new IsoTimeZoneString(now, "Pacific/Fiji");
                            default:
                                    return new IsoTimeZoneString(now, "Pacific/Fiji");
                        }
                    }
                    case "FLE Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "UA":
                                switch($"Europe/{regionName}")
                                {
                                    case "Europe/Kiev":
                                        return new IsoTimeZoneString(now, "Europe/Kiev");
                                    case "Europe/Uzhgorod":
                                        return new IsoTimeZoneString(now, "Europe/Uzhgorod");
                                    case "Europe/Zaporozhye":
                                        return new IsoTimeZoneString(now, "Europe/Zaporozhye");
                                    default:
                                        return new IsoTimeZoneString(now, "Europe/Kiev");
                                }
                            case "LV":
                                    return new IsoTimeZoneString(now, "Europe/Riga");
                            case "LT":
                                    return new IsoTimeZoneString(now, "Europe/Vilnius");
                            case "FI":
                                    return new IsoTimeZoneString(now, "Europe/Helsinki");
                            case "EE":
                                    return new IsoTimeZoneString(now, "Europe/Tallinn");
                            case "BG":
                                    return new IsoTimeZoneString(now, "Europe/Sofia");
                            case "AX":
                                    return new IsoTimeZoneString(now, "Europe/Mariehamn");
                            default:
                                    return new IsoTimeZoneString(now, "Europe/Kiev");
                        }
                    }
                    case "Georgian Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "GE":
                                    return new IsoTimeZoneString(now, "Asia/Tbilisi");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Tbilisi");
                        }
                    }
                    case "GMT Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "PT":
                                switch($"Europe/{regionName}")
                                {
                                    case "Europe/Lisbon":
                                        return new IsoTimeZoneString(now, "Europe/Lisbon");
                                    case "Atlantic/Madeira":
                                        return new IsoTimeZoneString(now, "Atlantic/Madeira");
                                    default:
                                        return new IsoTimeZoneString(now, "Europe/Lisbon");
                                }
                            case "JE":
                                    return new IsoTimeZoneString(now, "Europe/Jersey");
                            case "IM":
                                    return new IsoTimeZoneString(now, "Europe/Isle_of_Man");
                            case "IE":
                                    return new IsoTimeZoneString(now, "Europe/Dublin");
                            case "GG":
                                    return new IsoTimeZoneString(now, "Europe/Guernsey");
                            case "GB":
                                    return new IsoTimeZoneString(now, "Europe/London");
                            case "FO":
                                    return new IsoTimeZoneString(now, "Atlantic/Faeroe");
                            case "ES":
                                    return new IsoTimeZoneString(now, "Atlantic/Canary");
                            default:
                                    return new IsoTimeZoneString(now, "Europe/London");
                        }
                    }
                    case "Greenland Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "GL":
                                    return new IsoTimeZoneString(now, "America/Godthab");
                            default:
                                    return new IsoTimeZoneString(now, "America/Godthab");
                        }
                    }
                    case "Greenwich Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "TG":
                                    return new IsoTimeZoneString(now, "Africa/Lome");
                            case "SN":
                                    return new IsoTimeZoneString(now, "Africa/Dakar");
                            case "SL":
                                    return new IsoTimeZoneString(now, "Africa/Freetown");
                            case "SH":
                                    return new IsoTimeZoneString(now, "Atlantic/St_Helena");
                            case "MR":
                                    return new IsoTimeZoneString(now, "Africa/Nouakchott");
                            case "ML":
                                    return new IsoTimeZoneString(now, "Africa/Bamako");
                            case "LR":
                                    return new IsoTimeZoneString(now, "Africa/Monrovia");
                            case "IS":
                                    return new IsoTimeZoneString(now, "Atlantic/Reykjavik");
                            case "GW":
                                    return new IsoTimeZoneString(now, "Africa/Bissau");
                            case "GN":
                                    return new IsoTimeZoneString(now, "Africa/Conakry");
                            case "GM":
                                    return new IsoTimeZoneString(now, "Africa/Banjul");
                            case "GH":
                                    return new IsoTimeZoneString(now, "Africa/Accra");
                            case "CI":
                                    return new IsoTimeZoneString(now, "Africa/Abidjan");
                            case "BF":
                                    return new IsoTimeZoneString(now, "Africa/Ouagadougou");
                            default:
                                    return new IsoTimeZoneString(now, "Atlantic/Reykjavik");
                        }
                    }
                    case "GTB Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "RO":
                                    return new IsoTimeZoneString(now, "Europe/Bucharest");
                            case "GR":
                                    return new IsoTimeZoneString(now, "Europe/Athens");
                            case "CY":
                                switch($"Asia/{regionName}")
                                {
                                    case "Asia/Nicosia":
                                        return new IsoTimeZoneString(now, "Asia/Nicosia");
                                    case "Asia/Famagusta":
                                        return new IsoTimeZoneString(now, "Asia/Famagusta");
                                    default:
                                        return new IsoTimeZoneString(now, "Asia/Nicosia");
                                }
                            default:
                                    return new IsoTimeZoneString(now, "Europe/Bucharest");
                        }
                    }
                    case "Haiti Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "HT":
                                    return new IsoTimeZoneString(now, "America/Port-au-Prince");
                            default:
                                    return new IsoTimeZoneString(now, "America/Port-au-Prince");
                        }
                    }
                    case "Hawaiian Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ZZ":
                                    return new IsoTimeZoneString(now, "Etc/GMT+10");
                            case "US":
                                    return new IsoTimeZoneString(now, "Pacific/Honolulu");
                            case "UM":
                                    return new IsoTimeZoneString(now, "Pacific/Johnston");
                            case "PF":
                                    return new IsoTimeZoneString(now, "Pacific/Tahiti");
                            case "CK":
                                    return new IsoTimeZoneString(now, "Pacific/Rarotonga");
                            default:
                                    return new IsoTimeZoneString(now, "Pacific/Honolulu");
                        }
                    }
                    case "India Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "IN":
                                    return new IsoTimeZoneString(now, "Asia/Calcutta");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Calcutta");
                        }
                    }
                    case "Iran Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "IR":
                                    return new IsoTimeZoneString(now, "Asia/Tehran");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Tehran");
                        }
                    }
                    case "Israel Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "IL":
                                    return new IsoTimeZoneString(now, "Asia/Jerusalem");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Jerusalem");
                        }
                    }
                    case "Jordan Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "JO":
                                    return new IsoTimeZoneString(now, "Asia/Amman");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Amman");
                        }
                    }
                    case "Kaliningrad Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "RU":
                                    return new IsoTimeZoneString(now, "Europe/Kaliningrad");
                            default:
                                    return new IsoTimeZoneString(now, "Europe/Kaliningrad");
                        }
                    }
                    case "Korea Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "KR":
                                    return new IsoTimeZoneString(now, "Asia/Seoul");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Seoul");
                        }
                    }
                    case "Libya Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "LY":
                                    return new IsoTimeZoneString(now, "Africa/Tripoli");
                            default:
                                    return new IsoTimeZoneString(now, "Africa/Tripoli");
                        }
                    }
                    case "Line Islands Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ZZ":
                                    return new IsoTimeZoneString(now, "Etc/GMT-14");
                            case "KI":
                                    return new IsoTimeZoneString(now, "Pacific/Kiritimati");
                            default:
                                    return new IsoTimeZoneString(now, "Pacific/Kiritimati");
                        }
                    }
                    case "Lord Howe Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "AU":
                                    return new IsoTimeZoneString(now, "Australia/Lord_Howe");
                            default:
                                    return new IsoTimeZoneString(now, "Australia/Lord_Howe");
                        }
                    }
                    case "Magadan Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "RU":
                                    return new IsoTimeZoneString(now, "Asia/Magadan");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Magadan");
                        }
                    }
                    case "Magallanes Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "CL":
                                    return new IsoTimeZoneString(now, "America/Punta_Arenas");
                            default:
                                    return new IsoTimeZoneString(now, "America/Punta_Arenas");
                        }
                    }
                    case "Marquesas Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "PF":
                                    return new IsoTimeZoneString(now, "Pacific/Marquesas");
                            default:
                                    return new IsoTimeZoneString(now, "Pacific/Marquesas");
                        }
                    }
                    case "Mauritius Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "SC":
                                    return new IsoTimeZoneString(now, "Indian/Mahe");
                            case "RE":
                                    return new IsoTimeZoneString(now, "Indian/Reunion");
                            case "MU":
                                    return new IsoTimeZoneString(now, "Indian/Mauritius");
                            default:
                                    return new IsoTimeZoneString(now, "Indian/Mauritius");
                        }
                    }
                    case "Middle East Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "LB":
                                    return new IsoTimeZoneString(now, "Asia/Beirut");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Beirut");
                        }
                    }
                    case "Montevideo Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "UY":
                                    return new IsoTimeZoneString(now, "America/Montevideo");
                            default:
                                    return new IsoTimeZoneString(now, "America/Montevideo");
                        }
                    }
                    case "Morocco Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "MA":
                                    return new IsoTimeZoneString(now, "Africa/Casablanca");
                            case "EH":
                                    return new IsoTimeZoneString(now, "Africa/El_Aaiun");
                            default:
                                    return new IsoTimeZoneString(now, "Africa/Casablanca");
                        }
                    }
                    case "Mountain Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ZZ":
                                    return new IsoTimeZoneString(now, "MST7MDT");
                            case "US":
                                switch($"America/{regionName}")
                                {
                                    case "America/Denver":
                                        return new IsoTimeZoneString(now, "America/Denver");
                                    case "America/Boise":
                                        return new IsoTimeZoneString(now, "America/Boise");
                                    default:
                                        return new IsoTimeZoneString(now, "America/Denver");
                                }
                            case "MX":
                                    return new IsoTimeZoneString(now, "America/Ojinaga");
                            case "CA":
                                switch($"America/{regionName}")
                                {
                                    case "America/Edmonton":
                                        return new IsoTimeZoneString(now, "America/Edmonton");
                                    case "America/Cambridge_Bay":
                                        return new IsoTimeZoneString(now, "America/Cambridge_Bay");
                                    case "America/Inuvik":
                                        return new IsoTimeZoneString(now, "America/Inuvik");
                                    case "America/Yellowknife":
                                        return new IsoTimeZoneString(now, "America/Yellowknife");
                                    default:
                                        return new IsoTimeZoneString(now, "America/Edmonton");
                                }
                            default:
                                    return new IsoTimeZoneString(now, "America/Denver");
                        }
                    }
                    case "Mountain Standard Time (Mexico)":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "MX":
                                switch($"America/{regionName}")
                                {
                                    case "America/Chihuahua":
                                        return new IsoTimeZoneString(now, "America/Chihuahua");
                                    case "America/Mazatlan":
                                        return new IsoTimeZoneString(now, "America/Mazatlan");
                                    default:
                                        return new IsoTimeZoneString(now, "America/Chihuahua");
                                }
                            default:
                                    return new IsoTimeZoneString(now, "America/Chihuahua");
                        }
                    }
                    case "Myanmar Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "MM":
                                    return new IsoTimeZoneString(now, "Asia/Rangoon");
                            case "CC":
                                    return new IsoTimeZoneString(now, "Indian/Cocos");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Rangoon");
                        }
                    }
                    case "N. Central Asia Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "RU":
                                    return new IsoTimeZoneString(now, "Asia/Novosibirsk");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Novosibirsk");
                        }
                    }
                    case "Namibia Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "NA":
                                    return new IsoTimeZoneString(now, "Africa/Windhoek");
                            default:
                                    return new IsoTimeZoneString(now, "Africa/Windhoek");
                        }
                    }
                    case "Nepal Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "NP":
                                    return new IsoTimeZoneString(now, "Asia/Katmandu");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Katmandu");
                        }
                    }
                    case "New Zealand Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "NZ":
                                    return new IsoTimeZoneString(now, "Pacific/Auckland");
                            case "AQ":
                                    return new IsoTimeZoneString(now, "Antarctica/McMurdo");
                            default:
                                    return new IsoTimeZoneString(now, "Pacific/Auckland");
                        }
                    }
                    case "Newfoundland Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "CA":
                                    return new IsoTimeZoneString(now, "America/St_Johns");
                            default:
                                    return new IsoTimeZoneString(now, "America/St_Johns");
                        }
                    }
                    case "Norfolk Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "NF":
                                    return new IsoTimeZoneString(now, "Pacific/Norfolk");
                            default:
                                    return new IsoTimeZoneString(now, "Pacific/Norfolk");
                        }
                    }
                    case "North Asia East Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "RU":
                                    return new IsoTimeZoneString(now, "Asia/Irkutsk");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Irkutsk");
                        }
                    }
                    case "North Asia Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "RU":
                                switch($"Asia/{regionName}")
                                {
                                    case "Asia/Krasnoyarsk":
                                        return new IsoTimeZoneString(now, "Asia/Krasnoyarsk");
                                    case "Asia/Novokuznetsk":
                                        return new IsoTimeZoneString(now, "Asia/Novokuznetsk");
                                    default:
                                        return new IsoTimeZoneString(now, "Asia/Krasnoyarsk");
                                }
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Krasnoyarsk");
                        }
                    }
                    case "North Korea Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "KP":
                                    return new IsoTimeZoneString(now, "Asia/Pyongyang");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Pyongyang");
                        }
                    }
                    case "Omsk Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "RU":
                                    return new IsoTimeZoneString(now, "Asia/Omsk");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Omsk");
                        }
                    }
                    case "Pacific SA Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "CL":
                                    return new IsoTimeZoneString(now, "America/Santiago");
                            default:
                                    return new IsoTimeZoneString(now, "America/Santiago");
                        }
                    }
                    case "Pacific Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ZZ":
                                    return new IsoTimeZoneString(now, "PST8PDT");
                            case "US":
                                    return new IsoTimeZoneString(now, "America/Los_Angeles");
                            case "CA":
                                switch($"America/{regionName}")
                                {
                                    case "America/Vancouver":
                                        return new IsoTimeZoneString(now, "America/Vancouver");
                                    case "America/Dawson":
                                        return new IsoTimeZoneString(now, "America/Dawson");
                                    case "America/Whitehorse":
                                        return new IsoTimeZoneString(now, "America/Whitehorse");
                                    default:
                                        return new IsoTimeZoneString(now, "America/Vancouver");
                                }
                            default:
                                    return new IsoTimeZoneString(now, "America/Los_Angeles");
                        }
                    }
                    case "Pacific Standard Time (Mexico)":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "MX":
                                switch($"America/{regionName}")
                                {
                                    case "America/Tijuana":
                                        return new IsoTimeZoneString(now, "America/Tijuana");
                                    case "America/Santa_Isabel":
                                        return new IsoTimeZoneString(now, "America/Santa_Isabel");
                                    default:
                                        return new IsoTimeZoneString(now, "America/Tijuana");
                                }
                            default:
                                    return new IsoTimeZoneString(now, "America/Tijuana");
                        }
                    }
                    case "Pakistan Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "PK":
                                    return new IsoTimeZoneString(now, "Asia/Karachi");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Karachi");
                        }
                    }
                    case "Paraguay Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "PY":
                                    return new IsoTimeZoneString(now, "America/Asuncion");
                            default:
                                    return new IsoTimeZoneString(now, "America/Asuncion");
                        }
                    }
                    case "Qyzylorda Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "KZ":
                                    return new IsoTimeZoneString(now, "Asia/Qyzylorda");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Qyzylorda");
                        }
                    }
                    case "Romance Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "FR":
                                    return new IsoTimeZoneString(now, "Europe/Paris");
                            case "ES":
                                switch($"Europe/{regionName}")
                                {
                                    case "Europe/Madrid":
                                        return new IsoTimeZoneString(now, "Europe/Madrid");
                                    case "Africa/Ceuta":
                                        return new IsoTimeZoneString(now, "Africa/Ceuta");
                                    default:
                                        return new IsoTimeZoneString(now, "Europe/Madrid");
                                }
                            case "DK":
                                    return new IsoTimeZoneString(now, "Europe/Copenhagen");
                            case "BE":
                                    return new IsoTimeZoneString(now, "Europe/Brussels");
                            default:
                                    return new IsoTimeZoneString(now, "Europe/Paris");
                        }
                    }
                    case "Russia Time Zone 3":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "RU":
                                    return new IsoTimeZoneString(now, "Europe/Samara");
                            default:
                                    return new IsoTimeZoneString(now, "Europe/Samara");
                        }
                    }
                    case "Russia Time Zone 10":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "RU":
                                    return new IsoTimeZoneString(now, "Asia/Srednekolymsk");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Srednekolymsk");
                        }
                    }
                    case "Russia Time Zone 11":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "RU":
                                switch($"Asia/{regionName}")
                                {
                                    case "Asia/Kamchatka":
                                        return new IsoTimeZoneString(now, "Asia/Kamchatka");
                                    case "Asia/Anadyr":
                                        return new IsoTimeZoneString(now, "Asia/Anadyr");
                                    default:
                                        return new IsoTimeZoneString(now, "Asia/Kamchatka");
                                }
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Kamchatka");
                        }
                    }
                    case "Russian Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "UA":
                                    return new IsoTimeZoneString(now, "Europe/Simferopol");
                            case "RU":
                                switch($"Europe/{regionName}")
                                {
                                    case "Europe/Moscow":
                                        return new IsoTimeZoneString(now, "Europe/Moscow");
                                    case "Europe/Kirov":
                                        return new IsoTimeZoneString(now, "Europe/Kirov");
                                    default:
                                        return new IsoTimeZoneString(now, "Europe/Moscow");
                                }
                            default:
                                    return new IsoTimeZoneString(now, "Europe/Moscow");
                        }
                    }
                    case "SA Eastern Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ZZ":
                                    return new IsoTimeZoneString(now, "Etc/GMT+3");
                            case "SR":
                                    return new IsoTimeZoneString(now, "America/Paramaribo");
                            case "GF":
                                    return new IsoTimeZoneString(now, "America/Cayenne");
                            case "FK":
                                    return new IsoTimeZoneString(now, "Atlantic/Stanley");
                            case "BR":
                                switch($"America/{regionName}")
                                {
                                    case "America/Fortaleza":
                                        return new IsoTimeZoneString(now, "America/Fortaleza");
                                    case "America/Belem":
                                        return new IsoTimeZoneString(now, "America/Belem");
                                    case "America/Maceio":
                                        return new IsoTimeZoneString(now, "America/Maceio");
                                    case "America/Recife":
                                        return new IsoTimeZoneString(now, "America/Recife");
                                    case "America/Santarem":
                                        return new IsoTimeZoneString(now, "America/Santarem");
                                    default:
                                        return new IsoTimeZoneString(now, "America/Fortaleza");
                                }
                            case "AQ":
                                switch($"Antarctica/{regionName}")
                                {
                                    case "Antarctica/Rothera":
                                        return new IsoTimeZoneString(now, "Antarctica/Rothera");
                                    case "Antarctica/Palmer":
                                        return new IsoTimeZoneString(now, "Antarctica/Palmer");
                                    default:
                                        return new IsoTimeZoneString(now, "Antarctica/Rothera");
                                }
                            default:
                                    return new IsoTimeZoneString(now, "America/Cayenne");
                        }
                    }
                    case "SA Pacific Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ZZ":
                                    return new IsoTimeZoneString(now, "Etc/GMT+5");
                            case "PE":
                                    return new IsoTimeZoneString(now, "America/Lima");
                            case "PA":
                                    return new IsoTimeZoneString(now, "America/Panama");
                            case "KY":
                                    return new IsoTimeZoneString(now, "America/Cayman");
                            case "JM":
                                    return new IsoTimeZoneString(now, "America/Jamaica");
                            case "EC":
                                    return new IsoTimeZoneString(now, "America/Guayaquil");
                            case "CO":
                                    return new IsoTimeZoneString(now, "America/Bogota");
                            case "CA":
                                    return new IsoTimeZoneString(now, "America/Coral_Harbour");
                            case "BR":
                                switch($"America/{regionName}")
                                {
                                    case "America/Rio_Branco":
                                        return new IsoTimeZoneString(now, "America/Rio_Branco");
                                    case "America/Eirunepe":
                                        return new IsoTimeZoneString(now, "America/Eirunepe");
                                    default:
                                        return new IsoTimeZoneString(now, "America/Rio_Branco");
                                }
                            default:
                                    return new IsoTimeZoneString(now, "America/Bogota");
                        }
                    }
                    case "SA Western Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ZZ":
                                    return new IsoTimeZoneString(now, "Etc/GMT+4");
                            case "VI":
                                    return new IsoTimeZoneString(now, "America/St_Thomas");
                            case "VG":
                                    return new IsoTimeZoneString(now, "America/Tortola");
                            case "VC":
                                    return new IsoTimeZoneString(now, "America/St_Vincent");
                            case "TT":
                                    return new IsoTimeZoneString(now, "America/Port_of_Spain");
                            case "SX":
                                    return new IsoTimeZoneString(now, "America/Lower_Princes");
                            case "PR":
                                    return new IsoTimeZoneString(now, "America/Puerto_Rico");
                            case "MS":
                                    return new IsoTimeZoneString(now, "America/Montserrat");
                            case "MQ":
                                    return new IsoTimeZoneString(now, "America/Martinique");
                            case "MF":
                                    return new IsoTimeZoneString(now, "America/Marigot");
                            case "LC":
                                    return new IsoTimeZoneString(now, "America/St_Lucia");
                            case "KN":
                                    return new IsoTimeZoneString(now, "America/St_Kitts");
                            case "GY":
                                    return new IsoTimeZoneString(now, "America/Guyana");
                            case "GP":
                                    return new IsoTimeZoneString(now, "America/Guadeloupe");
                            case "GD":
                                    return new IsoTimeZoneString(now, "America/Grenada");
                            case "DO":
                                    return new IsoTimeZoneString(now, "America/Santo_Domingo");
                            case "DM":
                                    return new IsoTimeZoneString(now, "America/Dominica");
                            case "CW":
                                    return new IsoTimeZoneString(now, "America/Curacao");
                            case "CA":
                                    return new IsoTimeZoneString(now, "America/Blanc-Sablon");
                            case "BR":
                                switch($"America/{regionName}")
                                {
                                    case "America/Manaus":
                                        return new IsoTimeZoneString(now, "America/Manaus");
                                    case "America/Boa_Vista":
                                        return new IsoTimeZoneString(now, "America/Boa_Vista");
                                    case "America/Porto_Velho":
                                        return new IsoTimeZoneString(now, "America/Porto_Velho");
                                    default:
                                        return new IsoTimeZoneString(now, "America/Manaus");
                                }
                            case "BQ":
                                    return new IsoTimeZoneString(now, "America/Kralendijk");
                            case "BO":
                                    return new IsoTimeZoneString(now, "America/La_Paz");
                            case "BL":
                                    return new IsoTimeZoneString(now, "America/St_Barthelemy");
                            case "BB":
                                    return new IsoTimeZoneString(now, "America/Barbados");
                            case "AW":
                                    return new IsoTimeZoneString(now, "America/Aruba");
                            case "AI":
                                    return new IsoTimeZoneString(now, "America/Anguilla");
                            case "AG":
                                    return new IsoTimeZoneString(now, "America/Antigua");
                            default:
                                    return new IsoTimeZoneString(now, "America/La_Paz");
                        }
                    }
                    case "Saint Pierre Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "PM":
                                    return new IsoTimeZoneString(now, "America/Miquelon");
                            default:
                                    return new IsoTimeZoneString(now, "America/Miquelon");
                        }
                    }
                    case "Sakhalin Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "RU":
                                    return new IsoTimeZoneString(now, "Asia/Sakhalin");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Sakhalin");
                        }
                    }
                    case "Samoa Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "WS":
                                    return new IsoTimeZoneString(now, "Pacific/Apia");
                            default:
                                    return new IsoTimeZoneString(now, "Pacific/Apia");
                        }
                    }
                    case "Sao Tome Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ST":
                                    return new IsoTimeZoneString(now, "Africa/Sao_Tome");
                            default:
                                    return new IsoTimeZoneString(now, "Africa/Sao_Tome");
                        }
                    }
                    case "Saratov Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "RU":
                                    return new IsoTimeZoneString(now, "Europe/Saratov");
                            default:
                                    return new IsoTimeZoneString(now, "Europe/Saratov");
                        }
                    }
                    case "SE Asia Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ZZ":
                                    return new IsoTimeZoneString(now, "Etc/GMT-7");
                            case "VN":
                                    return new IsoTimeZoneString(now, "Asia/Saigon");
                            case "TH":
                                    return new IsoTimeZoneString(now, "Asia/Bangkok");
                            case "LA":
                                    return new IsoTimeZoneString(now, "Asia/Vientiane");
                            case "KH":
                                    return new IsoTimeZoneString(now, "Asia/Phnom_Penh");
                            case "ID":
                                switch($"Asia/{regionName}")
                                {
                                    case "Asia/Jakarta":
                                        return new IsoTimeZoneString(now, "Asia/Jakarta");
                                    case "Asia/Pontianak":
                                        return new IsoTimeZoneString(now, "Asia/Pontianak");
                                    default:
                                        return new IsoTimeZoneString(now, "Asia/Jakarta");
                                }
                            case "CX":
                                    return new IsoTimeZoneString(now, "Indian/Christmas");
                            case "AQ":
                                    return new IsoTimeZoneString(now, "Antarctica/Davis");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Bangkok");
                        }
                    }
                    case "Singapore Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ZZ":
                                    return new IsoTimeZoneString(now, "Etc/GMT-8");
                            case "SG":
                                    return new IsoTimeZoneString(now, "Asia/Singapore");
                            case "PH":
                                    return new IsoTimeZoneString(now, "Asia/Manila");
                            case "MY":
                                switch($"Asia/{regionName}")
                                {
                                    case "Asia/Kuala_Lumpur":
                                        return new IsoTimeZoneString(now, "Asia/Kuala_Lumpur");
                                    case "Asia/Kuching":
                                        return new IsoTimeZoneString(now, "Asia/Kuching");
                                    default:
                                        return new IsoTimeZoneString(now, "Asia/Kuala_Lumpur");
                                }
                            case "ID":
                                    return new IsoTimeZoneString(now, "Asia/Makassar");
                            case "BN":
                                    return new IsoTimeZoneString(now, "Asia/Brunei");
                            case "AQ":
                                    return new IsoTimeZoneString(now, "Antarctica/Casey");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Singapore");
                        }
                    }
                    case "South Africa Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ZZ":
                                    return new IsoTimeZoneString(now, "Etc/GMT-2");
                            case "ZW":
                                    return new IsoTimeZoneString(now, "Africa/Harare");
                            case "ZM":
                                    return new IsoTimeZoneString(now, "Africa/Lusaka");
                            case "ZA":
                                    return new IsoTimeZoneString(now, "Africa/Johannesburg");
                            case "SZ":
                                    return new IsoTimeZoneString(now, "Africa/Mbabane");
                            case "RW":
                                    return new IsoTimeZoneString(now, "Africa/Kigali");
                            case "MZ":
                                    return new IsoTimeZoneString(now, "Africa/Maputo");
                            case "MW":
                                    return new IsoTimeZoneString(now, "Africa/Blantyre");
                            case "LS":
                                    return new IsoTimeZoneString(now, "Africa/Maseru");
                            case "CD":
                                    return new IsoTimeZoneString(now, "Africa/Lubumbashi");
                            case "BW":
                                    return new IsoTimeZoneString(now, "Africa/Gaborone");
                            case "BI":
                                    return new IsoTimeZoneString(now, "Africa/Bujumbura");
                            default:
                                    return new IsoTimeZoneString(now, "Africa/Johannesburg");
                        }
                    }
                    case "Sri Lanka Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "LK":
                                    return new IsoTimeZoneString(now, "Asia/Colombo");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Colombo");
                        }
                    }
                    case "Sudan Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "SD":
                                    return new IsoTimeZoneString(now, "Africa/Khartoum");
                            default:
                                    return new IsoTimeZoneString(now, "Africa/Khartoum");
                        }
                    }
                    case "Syria Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "SY":
                                    return new IsoTimeZoneString(now, "Asia/Damascus");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Damascus");
                        }
                    }
                    case "Taipei Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "TW":
                                    return new IsoTimeZoneString(now, "Asia/Taipei");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Taipei");
                        }
                    }
                    case "Tasmania Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "AU":
                                switch($"Australia/{regionName}")
                                {
                                    case "Australia/Hobart":
                                        return new IsoTimeZoneString(now, "Australia/Hobart");
                                    case "Australia/Currie":
                                        return new IsoTimeZoneString(now, "Australia/Currie");
                                    default:
                                        return new IsoTimeZoneString(now, "Australia/Hobart");
                                }
                            default:
                                    return new IsoTimeZoneString(now, "Australia/Hobart");
                        }
                    }
                    case "Tocantins Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "BR":
                                    return new IsoTimeZoneString(now, "America/Araguaina");
                            default:
                                    return new IsoTimeZoneString(now, "America/Araguaina");
                        }
                    }
                    case "Tokyo Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ZZ":
                                    return new IsoTimeZoneString(now, "Etc/GMT-9");
                            case "TL":
                                    return new IsoTimeZoneString(now, "Asia/Dili");
                            case "PW":
                                    return new IsoTimeZoneString(now, "Pacific/Palau");
                            case "JP":
                                    return new IsoTimeZoneString(now, "Asia/Tokyo");
                            case "ID":
                                    return new IsoTimeZoneString(now, "Asia/Jayapura");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Tokyo");
                        }
                    }
                    case "Tomsk Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "RU":
                                    return new IsoTimeZoneString(now, "Asia/Tomsk");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Tomsk");
                        }
                    }
                    case "Tonga Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "TO":
                                    return new IsoTimeZoneString(now, "Pacific/Tongatapu");
                            default:
                                    return new IsoTimeZoneString(now, "Pacific/Tongatapu");
                        }
                    }
                    case "Transbaikal Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "RU":
                                    return new IsoTimeZoneString(now, "Asia/Chita");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Chita");
                        }
                    }
                    case "Turkey Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "TR":
                                    return new IsoTimeZoneString(now, "Europe/Istanbul");
                            default:
                                    return new IsoTimeZoneString(now, "Europe/Istanbul");
                        }
                    }
                    case "Turks And Caicos Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "TC":
                                    return new IsoTimeZoneString(now, "America/Grand_Turk");
                            default:
                                    return new IsoTimeZoneString(now, "America/Grand_Turk");
                        }
                    }
                    case "Ulaanbaatar Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "MN":
                                switch($"Asia/{regionName}")
                                {
                                    case "Asia/Ulaanbaatar":
                                        return new IsoTimeZoneString(now, "Asia/Ulaanbaatar");
                                    case "Asia/Choibalsan":
                                        return new IsoTimeZoneString(now, "Asia/Choibalsan");
                                    default:
                                        return new IsoTimeZoneString(now, "Asia/Ulaanbaatar");
                                }
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Ulaanbaatar");
                        }
                    }
                    case "US Eastern Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "US":
                                switch($"America/{regionName}")
                                {
                                    case "America/Indianapolis":
                                        return new IsoTimeZoneString(now, "America/Indianapolis");
                                    case "America/Indiana/Marengo":
                                        return new IsoTimeZoneString(now, "America/Indiana/Marengo");
                                    case "America/Indiana/Vevay":
                                        return new IsoTimeZoneString(now, "America/Indiana/Vevay");
                                    default:
                                        return new IsoTimeZoneString(now, "America/Indianapolis");
                                }
                            default:
                                    return new IsoTimeZoneString(now, "America/Indianapolis");
                        }
                    }
                    case "US Mountain Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ZZ":
                                    return new IsoTimeZoneString(now, "Etc/GMT+7");
                            case "US":
                                    return new IsoTimeZoneString(now, "America/Phoenix");
                            case "MX":
                                    return new IsoTimeZoneString(now, "America/Hermosillo");
                            case "CA":
                                switch($"America/{regionName}")
                                {
                                    case "America/Dawson_Creek":
                                        return new IsoTimeZoneString(now, "America/Dawson_Creek");
                                    case "America/Creston":
                                        return new IsoTimeZoneString(now, "America/Creston");
                                    case "America/Fort_Nelson":
                                        return new IsoTimeZoneString(now, "America/Fort_Nelson");
                                    default:
                                        return new IsoTimeZoneString(now, "America/Dawson_Creek");
                                }
                            default:
                                    return new IsoTimeZoneString(now, "America/Phoenix");
                        }
                    }
                    case "UTC":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ZZ":
                                switch($"Etc/{regionName}")
                                {
                                    case "Etc/GMT":
                                        return new IsoTimeZoneString(now, "Etc/GMT");
                                    case "Etc/UTC":
                                        return new IsoTimeZoneString(now, "Etc/UTC");
                                    default:
                                        return new IsoTimeZoneString(now, "Etc/GMT");
                                }
                            case "GL":
                                    return new IsoTimeZoneString(now, "America/Danmarkshavn");
                            default:
                                    return new IsoTimeZoneString(now, "Etc/GMT");
                        }
                    }
                    case "UTC-02":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ZZ":
                                    return new IsoTimeZoneString(now, "Etc/GMT+2");
                            case "GS":
                                    return new IsoTimeZoneString(now, "Atlantic/South_Georgia");
                            case "BR":
                                    return new IsoTimeZoneString(now, "America/Noronha");
                            default:
                                    return new IsoTimeZoneString(now, "Etc/GMT+2");
                        }
                    }
                    case "UTC-08":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ZZ":
                                    return new IsoTimeZoneString(now, "Etc/GMT+8");
                            case "PN":
                                    return new IsoTimeZoneString(now, "Pacific/Pitcairn");
                            default:
                                    return new IsoTimeZoneString(now, "Etc/GMT+8");
                        }
                    }
                    case "UTC-09":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ZZ":
                                    return new IsoTimeZoneString(now, "Etc/GMT+9");
                            case "PF":
                                    return new IsoTimeZoneString(now, "Pacific/Gambier");
                            default:
                                    return new IsoTimeZoneString(now, "Etc/GMT+9");
                        }
                    }
                    case "UTC-11":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ZZ":
                                    return new IsoTimeZoneString(now, "Etc/GMT+11");
                            case "UM":
                                    return new IsoTimeZoneString(now, "Pacific/Midway");
                            case "NU":
                                    return new IsoTimeZoneString(now, "Pacific/Niue");
                            case "AS":
                                    return new IsoTimeZoneString(now, "Pacific/Pago_Pago");
                            default:
                                    return new IsoTimeZoneString(now, "Etc/GMT+11");
                        }
                    }
                    case "UTC+12":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ZZ":
                                    return new IsoTimeZoneString(now, "Etc/GMT-12");
                            case "WF":
                                    return new IsoTimeZoneString(now, "Pacific/Wallis");
                            case "UM":
                                    return new IsoTimeZoneString(now, "Pacific/Wake");
                            case "TV":
                                    return new IsoTimeZoneString(now, "Pacific/Funafuti");
                            case "NR":
                                    return new IsoTimeZoneString(now, "Pacific/Nauru");
                            case "MH":
                                switch($"Pacific/{regionName}")
                                {
                                    case "Pacific/Majuro":
                                        return new IsoTimeZoneString(now, "Pacific/Majuro");
                                    case "Pacific/Kwajalein":
                                        return new IsoTimeZoneString(now, "Pacific/Kwajalein");
                                    default:
                                        return new IsoTimeZoneString(now, "Pacific/Majuro");
                                }
                            case "KI":
                                    return new IsoTimeZoneString(now, "Pacific/Tarawa");
                            default:
                                    return new IsoTimeZoneString(now, "Etc/GMT-12");
                        }
                    }
                    case "UTC+13":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ZZ":
                                    return new IsoTimeZoneString(now, "Etc/GMT-13");
                            case "TK":
                                    return new IsoTimeZoneString(now, "Pacific/Fakaofo");
                            case "KI":
                                    return new IsoTimeZoneString(now, "Pacific/Enderbury");
                            default:
                                    return new IsoTimeZoneString(now, "Etc/GMT-13");
                        }
                    }
                    case "Venezuela Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "VE":
                                    return new IsoTimeZoneString(now, "America/Caracas");
                            default:
                                    return new IsoTimeZoneString(now, "America/Caracas");
                        }
                    }
                    case "Vladivostok Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "RU":
                                switch($"Asia/{regionName}")
                                {
                                    case "Asia/Vladivostok":
                                        return new IsoTimeZoneString(now, "Asia/Vladivostok");
                                    case "Asia/Ust-Nera":
                                        return new IsoTimeZoneString(now, "Asia/Ust-Nera");
                                    default:
                                        return new IsoTimeZoneString(now, "Asia/Vladivostok");
                                }
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Vladivostok");
                        }
                    }
                    case "Volgograd Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "RU":
                                    return new IsoTimeZoneString(now, "Europe/Volgograd");
                            default:
                                    return new IsoTimeZoneString(now, "Europe/Volgograd");
                        }
                    }
                    case "W. Australia Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "AU":
                                    return new IsoTimeZoneString(now, "Australia/Perth");
                            default:
                                    return new IsoTimeZoneString(now, "Australia/Perth");
                        }
                    }
                    case "W. Central Africa Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ZZ":
                                    return new IsoTimeZoneString(now, "Etc/GMT-1");
                            case "TN":
                                    return new IsoTimeZoneString(now, "Africa/Tunis");
                            case "TD":
                                    return new IsoTimeZoneString(now, "Africa/Ndjamena");
                            case "NG":
                                    return new IsoTimeZoneString(now, "Africa/Lagos");
                            case "NE":
                                    return new IsoTimeZoneString(now, "Africa/Niamey");
                            case "GQ":
                                    return new IsoTimeZoneString(now, "Africa/Malabo");
                            case "GA":
                                    return new IsoTimeZoneString(now, "Africa/Libreville");
                            case "DZ":
                                    return new IsoTimeZoneString(now, "Africa/Algiers");
                            case "CM":
                                    return new IsoTimeZoneString(now, "Africa/Douala");
                            case "CG":
                                    return new IsoTimeZoneString(now, "Africa/Brazzaville");
                            case "CF":
                                    return new IsoTimeZoneString(now, "Africa/Bangui");
                            case "CD":
                                    return new IsoTimeZoneString(now, "Africa/Kinshasa");
                            case "BJ":
                                    return new IsoTimeZoneString(now, "Africa/Porto-Novo");
                            case "AO":
                                    return new IsoTimeZoneString(now, "Africa/Luanda");
                            default:
                                    return new IsoTimeZoneString(now, "Africa/Lagos");
                        }
                    }
                    case "W. Europe Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "VA":
                                    return new IsoTimeZoneString(now, "Europe/Vatican");
                            case "SM":
                                    return new IsoTimeZoneString(now, "Europe/San_Marino");
                            case "SJ":
                                    return new IsoTimeZoneString(now, "Arctic/Longyearbyen");
                            case "SE":
                                    return new IsoTimeZoneString(now, "Europe/Stockholm");
                            case "NO":
                                    return new IsoTimeZoneString(now, "Europe/Oslo");
                            case "NL":
                                    return new IsoTimeZoneString(now, "Europe/Amsterdam");
                            case "MT":
                                    return new IsoTimeZoneString(now, "Europe/Malta");
                            case "MC":
                                    return new IsoTimeZoneString(now, "Europe/Monaco");
                            case "LU":
                                    return new IsoTimeZoneString(now, "Europe/Luxembourg");
                            case "LI":
                                    return new IsoTimeZoneString(now, "Europe/Vaduz");
                            case "IT":
                                    return new IsoTimeZoneString(now, "Europe/Rome");
                            case "GI":
                                    return new IsoTimeZoneString(now, "Europe/Gibraltar");
                            case "DE":
                                switch($"Europe/{regionName}")
                                {
                                    case "Europe/Berlin":
                                        return new IsoTimeZoneString(now, "Europe/Berlin");
                                    case "Europe/Busingen":
                                        return new IsoTimeZoneString(now, "Europe/Busingen");
                                    default:
                                        return new IsoTimeZoneString(now, "Europe/Berlin");
                                }
                            case "CH":
                                    return new IsoTimeZoneString(now, "Europe/Zurich");
                            case "AT":
                                    return new IsoTimeZoneString(now, "Europe/Vienna");
                            case "AD":
                                    return new IsoTimeZoneString(now, "Europe/Andorra");
                            default:
                                    return new IsoTimeZoneString(now, "Europe/Berlin");
                        }
                    }
                    case "W. Mongolia Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "MN":
                                    return new IsoTimeZoneString(now, "Asia/Hovd");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Hovd");
                        }
                    }
                    case "West Asia Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ZZ":
                                    return new IsoTimeZoneString(now, "Etc/GMT-5");
                            case "UZ":
                                switch($"Asia/{regionName}")
                                {
                                    case "Asia/Tashkent":
                                        return new IsoTimeZoneString(now, "Asia/Tashkent");
                                    case "Asia/Samarkand":
                                        return new IsoTimeZoneString(now, "Asia/Samarkand");
                                    default:
                                        return new IsoTimeZoneString(now, "Asia/Tashkent");
                                }
                            case "TM":
                                    return new IsoTimeZoneString(now, "Asia/Ashgabat");
                            case "TJ":
                                    return new IsoTimeZoneString(now, "Asia/Dushanbe");
                            case "TF":
                                    return new IsoTimeZoneString(now, "Indian/Kerguelen");
                            case "MV":
                                    return new IsoTimeZoneString(now, "Indian/Maldives");
                            case "KZ":
                                switch($"Asia/{regionName}")
                                {
                                    case "Asia/Oral":
                                        return new IsoTimeZoneString(now, "Asia/Oral");
                                    case "Asia/Aqtau":
                                        return new IsoTimeZoneString(now, "Asia/Aqtau");
                                    case "Asia/Aqtobe":
                                        return new IsoTimeZoneString(now, "Asia/Aqtobe");
                                    case "Asia/Atyrau":
                                        return new IsoTimeZoneString(now, "Asia/Atyrau");
                                    default:
                                        return new IsoTimeZoneString(now, "Asia/Oral");
                                }
                            case "AQ":
                                    return new IsoTimeZoneString(now, "Antarctica/Mawson");
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Tashkent");
                        }
                    }
                    case "West Bank Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "PS":
                                switch($"Asia/{regionName}")
                                {
                                    case "Asia/Hebron":
                                        return new IsoTimeZoneString(now, "Asia/Hebron");
                                    case "Asia/Gaza":
                                        return new IsoTimeZoneString(now, "Asia/Gaza");
                                    default:
                                        return new IsoTimeZoneString(now, "Asia/Hebron");
                                }
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Hebron");
                        }
                    }
                    case "West Pacific Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "ZZ":
                                    return new IsoTimeZoneString(now, "Etc/GMT-10");
                            case "PG":
                                    return new IsoTimeZoneString(now, "Pacific/Port_Moresby");
                            case "MP":
                                    return new IsoTimeZoneString(now, "Pacific/Saipan");
                            case "GU":
                                    return new IsoTimeZoneString(now, "Pacific/Guam");
                            case "FM":
                                    return new IsoTimeZoneString(now, "Pacific/Truk");
                            case "AQ":
                                    return new IsoTimeZoneString(now, "Antarctica/DumontDUrville");
                            default:
                                    return new IsoTimeZoneString(now, "Pacific/Port_Moresby");
                        }
                    }
                    case "Yakutsk Standard Time":
                    {
                        switch(region.TwoLetterISORegionName)
                        {
                            case "RU":
                                switch($"Asia/{regionName}")
                                {
                                    case "Asia/Yakutsk":
                                        return new IsoTimeZoneString(now, "Asia/Yakutsk");
                                    case "Asia/Khandyga":
                                        return new IsoTimeZoneString(now, "Asia/Khandyga");
                                    default:
                                        return new IsoTimeZoneString(now, "Asia/Yakutsk");
                                }
                            default:
                                    return new IsoTimeZoneString(now, "Asia/Yakutsk");
                        }
                    }
                    default:
                        throw new NotSupportedException($"Missing time zone map from '{localTimeZone.DisplayName}'");
                }

                #endregion
            }
        }
    }
}