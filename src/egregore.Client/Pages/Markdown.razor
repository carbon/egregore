@page "/markdown"
@using System.Text
@using System.Text.Json
@using egregore.Ontology
@using Markdig

    <div class="container">
        <h2>@Title</h2>
        <textarea id="mde"></textarea>
        <button class="btn btn-primary" @onclick="@SaveMarkdown">Save</button>
    </div>

@code {

    private MarkdownPipeline _pipeline;

    [Inject]
    public HttpClient Http { get; set; }

    [Inject]
    public IJSRuntime Js { get; set; }

    public string Title { get; set; }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
            Js.InvokeVoidAsync(Constants.Functions.InitMarkdownEditor);

        return base.OnAfterRenderAsync(firstRender);
    }

    protected override Task OnInitializedAsync()
    {
        Title = "New Page";

        _pipeline = new MarkdownPipelineBuilder().UseAdvancedExtensions().Build();
        
        return base.OnInitializedAsync();
    }

    private async Task SaveMarkdown()
    {
        var body = await Js.InvokeAsync<string>(Constants.Functions.GetMarkdownEditorContent);

        var page = new Page
        {
            Title = "Test",
            Body = body,
            BodyPlainText = Markdig.Markdown.ToPlainText(body, _pipeline),
            BodyHtml = Markdig.Markdown.ToHtml(body, _pipeline)
        };

        Console.WriteLine(JsonSerializer.Serialize(page));

        var response = await Http.PostAsJsonAsync("pages", page);
    }
}

